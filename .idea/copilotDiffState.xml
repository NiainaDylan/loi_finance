<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/finance/src/main/java/mg/loi/finance/controllers/SuiviFinancierDepenseController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/finance/src/main/java/mg/loi/finance/controllers/SuiviFinancierDepenseController.java" />
              <option name="originalContent" value="package mg.loi.finance.controllers;&#10;&#10;import mg.loi.finance.models.SuiviFinancierDepense;&#10;import mg.loi.finance.models.NatureDepense;&#10;import mg.loi.finance.services.SuiviFinancierDepenseService;&#10;import mg.loi.finance.services.NatureDepenseService;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.stereotype.Controller;&#10;import org.springframework.web.bind.annotation.*;&#10;import org.springframework.ui.Model;&#10;&#10;import java.math.BigDecimal;&#10;import java.util.List;&#10;import java.util.Optional;&#10;import java.util.Set;&#10;import java.util.TreeSet;&#10;import java.util.Map;&#10;import java.util.HashMap;&#10;import java.util.stream.Collectors;&#10;&#10;@Controller&#10;@RequestMapping(&quot;/suivi-financier-depenses&quot;)&#10;public class SuiviFinancierDepenseController {&#10;    &#10;    private final SuiviFinancierDepenseService suiviFinancierDepenseService;&#10;    private final NatureDepenseService natureDepenseService;&#10;&#10;    @Autowired&#10;    public SuiviFinancierDepenseController(SuiviFinancierDepenseService suiviFinancierDepenseService,&#10;                                           NatureDepenseService natureDepenseService) {&#10;        this.suiviFinancierDepenseService = suiviFinancierDepenseService;&#10;        this.natureDepenseService = natureDepenseService;&#10;    }&#10;    &#10;    @GetMapping&#10;    public String listSuiviDepenses(Model model) {&#10;        List&lt;SuiviFinancierDepense&gt; suivis = suiviFinancierDepenseService.findAll();&#10;        List&lt;NatureDepense&gt; natures = natureDepenseService.findAll();&#10;&#10;        // Récupérer toutes les années disponibles et les trier&#10;        Set&lt;Integer&gt; annees = suivis.stream()&#10;                .map(SuiviFinancierDepense::getAnnee)&#10;                .collect(Collectors.toCollection(TreeSet::new));&#10;&#10;        // Calculer les totaux par année&#10;        Map&lt;Integer, BigDecimal&gt; totauxParAnnee = new HashMap&lt;&gt;();&#10;        for (Integer annee : annees) {&#10;            BigDecimal total = suivis.stream()&#10;                    .filter(s -&gt; s.getAnnee() == annee)&#10;                    .map(SuiviFinancierDepense::getMontant)&#10;                    .reduce(BigDecimal.ZERO, BigDecimal::add);&#10;            totauxParAnnee.put(annee, total);&#10;        }&#10;&#10;        model.addAttribute(&quot;suivis&quot;, suivis);&#10;        model.addAttribute(&quot;natures&quot;, natures);&#10;        model.addAttribute(&quot;annees&quot;, annees);&#10;        model.addAttribute(&quot;totauxParAnnee&quot;, totauxParAnnee);&#10;        return &quot;Depense/list&quot;;&#10;    }&#10;&#10;}" />
              <option name="updatedContent" value="package mg.loi.finance.controllers;&#10;&#10;import mg.loi.finance.models.SuiviFinancierDepense;&#10;import mg.loi.finance.models.NatureDepense;&#10;import mg.loi.finance.services.SuiviFinancierDepenseService;&#10;import mg.loi.finance.services.NatureDepenseService;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.stereotype.Controller;&#10;import org.springframework.web.bind.annotation.*;&#10;import org.springframework.ui.Model;&#10;&#10;import java.math.BigDecimal;&#10;import java.util.List;&#10;import java.util.Optional;&#10;import java.util.Set;&#10;import java.util.TreeSet;&#10;import java.util.Map;&#10;import java.util.HashMap;&#10;import java.util.stream.Collectors;&#10;&#10;@Controller&#10;@RequestMapping(&quot;/suivi-financier-depenses&quot;)&#10;public class SuiviFinancierDepenseController {&#10;    &#10;    private final SuiviFinancierDepenseService suiviFinancierDepenseService;&#10;    private final NatureDepenseService natureDepenseService;&#10;&#10;    @Autowired&#10;    public SuiviFinancierDepenseController(SuiviFinancierDepenseService suiviFinancierDepenseService,&#10;                                           NatureDepenseService natureDepenseService) {&#10;        this.suiviFinancierDepenseService = suiviFinancierDepenseService;&#10;        this.natureDepenseService = natureDepenseService;&#10;    }&#10;    &#10;    @GetMapping&#10;    public String listSuiviDepenses(Model model) {&#10;        List&lt;SuiviFinancierDepense&gt; suivis = suiviFinancierDepenseService.findAll();&#10;        List&lt;NatureDepense&gt; natures = natureDepenseService.findAll();&#10;&#10;        // Récupérer toutes les années disponibles et les trier&#10;        Set&lt;Integer&gt; annees = suivis.stream()&#10;                .map(SuiviFinancierDepense::getAnnee)&#10;                .collect(Collectors.toCollection(TreeSet::new));&#10;&#10;        // Calculer les totaux par année&#10;        Map&lt;Integer, BigDecimal&gt; totauxParAnnee = new HashMap&lt;&gt;();&#10;        for (Integer annee : annees) {&#10;            BigDecimal total = suivis.stream()&#10;                    .filter(s -&gt; s.getAnnee() == annee)&#10;                    .map(SuiviFinancierDepense::getMontant)&#10;                    .reduce(BigDecimal.ZERO, BigDecimal::add);&#10;            totauxParAnnee.put(annee, total);&#10;        }&#10;&#10;        // Calculer une map (natureId -&gt; (annee -&gt; somme des montants)) pour accélérer l'affichage&#10;        Map&lt;Long, Map&lt;Integer, BigDecimal&gt;&gt; montantsParNatureParAnnee = new HashMap&lt;&gt;();&#10;        for (SuiviFinancierDepense s : suivis) {&#10;            if (s.getNatureDepense() == null) continue;&#10;            Long nid = s.getNatureDepense().getIdNature();&#10;            Integer a = s.getAnnee();&#10;            BigDecimal m = s.getMontant() == null ? BigDecimal.ZERO : s.getMontant();&#10;&#10;            montantsParNatureParAnnee.computeIfAbsent(nid, k -&gt; new HashMap&lt;&gt;());&#10;            Map&lt;Integer, BigDecimal&gt; mapAnnee = montantsParNatureParAnnee.get(nid);&#10;            mapAnnee.put(a, mapAnnee.getOrDefault(a, BigDecimal.ZERO).add(m));&#10;        }&#10;&#10;        model.addAttribute(&quot;suivis&quot;, suivis);&#10;        model.addAttribute(&quot;natures&quot;, natures);&#10;        model.addAttribute(&quot;annees&quot;, annees);&#10;        model.addAttribute(&quot;totauxParAnnee&quot;, totauxParAnnee);&#10;        model.addAttribute(&quot;montantsParNatureAnnee&quot;, montantsParNatureParAnnee);&#10;        return &quot;Depense/list&quot;;&#10;    }&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/finance/src/main/resources/templates/Depense/list.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/finance/src/main/resources/templates/Depense/list.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot; lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Suivi Financier des Dépenses&lt;/title&gt;&#10;    &lt;style&gt;&#10;        body {&#10;            font-family: Arial, sans-serif;&#10;            margin: 20px;&#10;            background-color: #f5f5f5;&#10;        }&#10;        h1 {&#10;            color: #333;&#10;            text-align: center;&#10;        }&#10;        table {&#10;            width: 100%;&#10;            border-collapse: collapse;&#10;            background-color: white;&#10;            box-shadow: 0 2px 4px rgba(0,0,0,0.1);&#10;        }&#10;        thead {&#10;            background-color: #4CAF50;&#10;            color: white;&#10;        }&#10;        th, td {&#10;            padding: 12px;&#10;            text-align: left;&#10;            border: 1px solid #ddd;&#10;        }&#10;        th {&#10;            font-weight: bold;&#10;        }&#10;        tbody tr:nth-child(even) {&#10;            background-color: #f9f9f9;&#10;        }&#10;        tbody tr:hover {&#10;            background-color: #f1f1f1;&#10;        }&#10;        .montant {&#10;            text-align: right;&#10;            font-weight: bold;&#10;        }&#10;        .container {&#10;            max-width: 1400px;&#10;            margin: 0 auto;&#10;        }&#10;        .total-row {&#10;            background-color: #e8f5e9 !important;&#10;            font-weight: bold;&#10;        }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h1&gt;Suivi Financier des Dépenses&lt;/h1&gt;&#10;&#10;        &lt;table&gt;&#10;            &lt;thead&gt;&#10;                &lt;tr&gt;&#10;                    &lt;th&gt;Nature de Dépense&lt;/th&gt;&#10;                    &lt;th&gt;Rubrique&lt;/th&gt;&#10;                    &lt;th th:each=&quot;annee : ${annees}&quot; th:text=&quot;${annee}&quot; class=&quot;montant&quot;&gt;&lt;/th&gt;&#10;                &lt;/tr&gt;&#10;            &lt;/thead&gt;&#10;            &lt;tbody&gt;&#10;                &lt;tr th:each=&quot;nature : ${natures}&quot;&gt;&#10;                    &lt;td th:text=&quot;${nature.depense?.nature ?: 'N/A'}&quot;&gt;&lt;/td&gt;&#10;                    &lt;td th:text=&quot;${nature.rubrique}&quot;&gt;&lt;/td&gt;&#10;                    &lt;td th:each=&quot;annee : ${annees}&quot; class=&quot;montant&quot;&gt;&#10;                        &lt;span th:each=&quot;suivi : ${suivis}&quot;&gt;&#10;                            &lt;span th:if=&quot;${suivi.natureDepense.idNature == nature.idNature &amp;&amp; suivi.annee == annee}&quot;&gt;&#10;                                &lt;span th:text=&quot;${#numbers.formatDecimal(suivi.montant, 1, 'POINT', 2, 'COMMA')}&quot;&gt;&lt;/span&gt;&#10;                            &lt;/span&gt;&#10;                        &lt;/span&gt;&#10;                    &lt;/td&gt;&#10;                &lt;/tr&gt;&#10;                &lt;tr th:if=&quot;${#lists.isEmpty(natures)}&quot;&gt;&#10;                    &lt;td th:colspan=&quot;${2 + #lists.size(annees)}&quot; style=&quot;text-align: center; color: #999;&quot;&gt;&#10;                        Aucune donnée disponible&#10;                    &lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            &lt;/tbody&gt;&#10;            &lt;tfoot&gt;&#10;                &lt;tr class=&quot;total-row&quot;&gt;&#10;                    &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;TOTAL&lt;/strong&gt;&lt;/td&gt;&#10;                    &lt;td th:each=&quot;annee : ${annees}&quot; class=&quot;montant&quot;&gt;&#10;                        &lt;strong th:text=&quot;${#numbers.formatDecimal(totauxParAnnee[annee], 1, 'POINT', 2, 'COMMA')}&quot;&gt;&lt;/strong&gt;&#10;                    &lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            &lt;/tfoot&gt;&#10;        &lt;/table&gt;&#10;    &lt;/div&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;\" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot; lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Suivi Financier des Dépenses&lt;/title&gt;&#10;    &lt;style&gt;&#10;        body {&#10;            font-family: Arial, sans-serif;&#10;            margin: 20px;&#10;            background-color: #f5f5f5;&#10;        }&#10;        h1 {&#10;            color: #333;&#10;            text-align: center;&#10;        }&#10;        table {&#10;            width: 100%;&#10;            border-collapse: collapse;&#10;            background-color: white;&#10;            box-shadow: 0 2px 4px rgba(0,0,0,0.1);&#10;        }&#10;        thead {&#10;            background-color: #4CAF50;&#10;            color: white;&#10;        }&#10;        th, td {&#10;            padding: 12px;&#10;            text-align: left;&#10;            border: 1px solid #ddd;&#10;        }&#10;        th {&#10;            font-weight: bold;&#10;        }&#10;        tbody tr:nth-child(even) {&#10;            background-color: #f9f9f9;&#10;        }&#10;        tbody tr:hover {&#10;            background-color: #f1f1f1;&#10;        }&#10;        .montant {&#10;            text-align: right;&#10;            font-weight: bold;&#10;        }&#10;        .container {&#10;            max-width: 1400px;&#10;            margin: 0 auto;&#10;        }&#10;        .total-row {&#10;            background-color: #e8f5e9 !important;&#10;            font-weight: bold;&#10;        }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h1&gt;Suivi Financier des Dépenses&lt;/h1&gt;&#10;&#10;        &lt;table&gt;&#10;            &lt;thead&gt;&#10;                &lt;tr&gt;&#10;                    &lt;th&gt;Nature de Dépense&lt;/th&gt;&#10;                    &lt;th&gt;Rubrique&lt;/th&gt;&#10;                    &lt;th th:each=&quot;annee : ${annees}&quot; class=&quot;montant&quot; th:text=&quot;${annee}&quot;&gt;&lt;/th&gt;&#10;                &lt;/tr&gt;&#10;            &lt;/thead&gt;&#10;            &lt;tbody&gt;&#10;                &lt;tr th:each=&quot;nature : ${natures}&quot;&gt;&#10;                    &lt;td th:text=&quot;${nature.depense != null ? nature.depense.nature : 'N/A'}&quot;&gt;&lt;/td&gt;&#10;                    &lt;td th:text=&quot;${nature.rubrique}&quot;&gt;&lt;/td&gt;&#10;&#10;                    &lt;td th:each=&quot;annee : ${annees}&quot; class=&quot;montant&quot;&#10;                        th:text=&quot;${(montantsParNatureAnnee[nature.idNature] != null and montantsParNatureAnnee[nature.idNature][annee] != null) ? montantsParNatureAnnee[nature.idNature][annee] : 0}&quot;&gt;&#10;                    &lt;/td&gt;&#10;                &lt;/tr&gt;&#10;&#10;                &lt;tr th:if=&quot;${#lists.isEmpty(natures)}&quot;&gt;&#10;                    &lt;td th:colspan=&quot;${2 + #lists.size(annees)}&quot; style=&quot;text-align: center; color: #999;&quot;&gt;&#10;                        Aucune donnée disponible&#10;                    &lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            &lt;/tbody&gt;&#10;            &lt;tfoot&gt;&#10;                &lt;tr class=&quot;total-row&quot;&gt;&#10;                    &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;TOTAL&lt;/strong&gt;&lt;/td&gt;&#10;                    &lt;td th:each=&quot;annee : ${annees}&quot; class=&quot;montant&quot;&#10;                        th:text=&quot;${totauxParAnnee[annee] != null ? totauxParAnnee[annee] : 0}&quot;&gt;&#10;                    &lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            &lt;/tfoot&gt;&#10;        &lt;/table&gt;&#10;    &lt;/div&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>